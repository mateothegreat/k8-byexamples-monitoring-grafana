apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana-core
  namespace: $NS
  labels:
    app: grafana
    component: core
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
        component: core
    spec:
      containers:
      - image: $IMAGE
        name: grafana-core
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "$ADMIN_PASSWORD"
          - name: GF_INSTALL_PLUGINS
            value: "$INSTALL_PLUGINS"
          - name: GF_AWS_PROFILES
            value: "$AWS_PROFILE"
          - name: GF_AWS_default_ACCESS_KEY_ID
            value: "$AWS_ACCESS_KEY_ID"
          - name: GF_AWS_default_SECRET_ACCESS_KEY
            value: "$AWS_SECRET_ACCESS_KEY"
          - name: GF_AWS_default_REGION
            value: "$AWS_REGION"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
          initialDelaySeconds: 60
          timeoutSeconds: 15
        volumeMounts:
          - name: $GCE_DISK
            mountPath: /var/lib/grafana
      volumes:
      - name: $GCE_DISK
        persistentVolumeClaim:
          claimName: $GCE_DISK
